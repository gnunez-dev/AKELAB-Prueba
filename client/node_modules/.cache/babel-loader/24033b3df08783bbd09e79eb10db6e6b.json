{"ast":null,"code":"export const orderMoviesReducer = (state, payload) => {\n  if (payload === 'ascFecha' || payload === 'ascPuntaje') {\n    if (payload === 'ascFecha') {\n      return state.movies.sort((a, b) => {\n        if (a.release_date > b.release_date) return 1;\n        if (b.release_date > a.release_date) return -1;\n        return 0;\n      });\n    } else {\n      return state.movies.sort((a, b) => {\n        if (a.vote_average > b.vote_average) return 1;\n        if (b.vote_average > a.vote_average) return -1;\n        return 0;\n      });\n    }\n  } else {\n    if (payload === 'descFecha') {\n      return state.movies.sort((a, b) => {\n        if (a.release_date > b.release_date) return -1;\n        if (b.release_date > a.release_date) return 1;\n        return 0;\n      });\n    } else {\n      return state.movies.sort((a, b) => {\n        if (a.vote_average > b.vote_average) return -1;\n        if (b.vote_average > a.vote_average) return 1;\n        return 0;\n      });\n    }\n  }\n};\nexport const searchMovieReducer = (allMovies, payload) => {\n  return allMovies.filter(m => m.title.toLowerCase().includes(payload.toLowerCase()));\n};\nexport const filterMoviesReducer = (allMovies, payload) => {\n  if (payload.length === 0) {\n    return allMovies;\n  } else {\n    var moviesFiltradas = [];\n    var moviesComprobadas = [];\n\n    for (let i = 0; i < allMovies.length; i++) {\n      for (let j = 0; j < payload.length; j++) {\n        if (allMovies[i].genre_ids.includes(Number(payload[j]))) {\n          if (!moviesComprobadas.includes(allMovies[i].id)) {\n            moviesComprobadas.push(allMovies[i].id);\n            moviesFiltradas.push(allMovies[i]);\n          }\n        }\n      }\n    }\n\n    return moviesFiltradas;\n  }\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Prueba-desarrollo-AKElab/client/src/redux/utils.js"],"names":["orderMoviesReducer","state","payload","movies","sort","a","b","release_date","vote_average","searchMovieReducer","allMovies","filter","m","title","toLowerCase","includes","filterMoviesReducer","length","moviesFiltradas","moviesComprobadas","i","j","genre_ids","Number","id","push"],"mappings":"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","sourcesContent":["\r\nexport const orderMoviesReducer = (state, payload) => {\r\n\r\n    if(payload === 'ascFecha' || payload === 'ascPuntaje'){\r\n\r\n        if(payload === 'ascFecha'){\r\n            return state.movies.sort( (a, b) => {\r\n                if( a.release_date > b.release_date ) return 1\r\n                if( b.release_date > a.release_date ) return -1\r\n                return 0\r\n            })\r\n        } else {\r\n            return state.movies.sort( (a, b) => {\r\n                if( a.vote_average > b.vote_average ) return 1\r\n                if( b.vote_average > a.vote_average ) return -1\r\n                return 0\r\n            })\r\n        }\r\n\r\n\r\n    } else {\r\n\r\n        if(payload === 'descFecha'){\r\n            return state.movies.sort( (a, b) => {\r\n                if( a.release_date > b.release_date ) return -1\r\n                if( b.release_date > a.release_date ) return 1\r\n                return 0\r\n            });\r\n        } else {\r\n            return state.movies.sort( (a, b) => {\r\n                if( a.vote_average > b.vote_average ) return -1\r\n                if( b.vote_average > a.vote_average ) return 1\r\n                return 0\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const searchMovieReducer = ( allMovies, payload ) => {\r\n\r\n    return allMovies.filter( m => m.title.toLowerCase().includes( payload.toLowerCase()) )\r\n\r\n}\r\n\r\nexport const filterMoviesReducer = (allMovies, payload) => {\r\n    \r\n    if( payload.length === 0 ){\r\n\r\n        return allMovies\r\n        \r\n    } else {\r\n\r\n        var moviesFiltradas = [];\r\n        var moviesComprobadas = [];\r\n        for(let i = 0; i < allMovies.length; i++){\r\n\r\n            for(let j = 0; j < payload.length; j++){\r\n\r\n                if( allMovies[i].genre_ids.includes( Number(payload[j])) ) {\r\n\r\n\r\n                    if( !moviesComprobadas.includes(allMovies[i].id) ){\r\n\r\n                        moviesComprobadas.push(allMovies[i].id);\r\n                        moviesFiltradas.push(allMovies[i]);\r\n\r\n                    }\r\n                    \r\n                }\r\n                 \r\n            }\r\n        }\r\n\r\n        return moviesFiltradas;\r\n\r\n    }\r\n\r\n    \r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}