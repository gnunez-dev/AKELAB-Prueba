{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Prueba-desarrollo-AKElab\\\\client\\\\src\\\\components\\\\Fibonacci\\\\Fibonacci.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fibonacci = () => {\n  _s();\n\n  const [number, setNumber] = useState(null);\n  const [secuencia, setSecuencia] = useState('');\n\n  function nFibonacci(n) {\n    let arr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 1];\n\n    /* if(n === 0 ){\r\n        arr.push(0);\r\n        return arr.join(', ');\r\n    } else if( n === 1){\r\n        arr.push(1);\r\n        return arr.join(', ');\r\n    } else {\r\n        arr.push(nFibonacci(n-1, arr) + nFibonacci(n-2, arr));\r\n        return arr.join(', ');\r\n    }   */\n    for (i = 2; i <= n; i++) {\n      arr.push(arr[i - 1] + arr[i - 2]);\n      document.write(arr[i] + \"<br/>\");\n    }\n\n    return arr.join(', ');\n  }\n\n  const handleChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleClick = () => {\n    let calculoFibonacci = nFibonacci(number);\n    setSecuencia(calculoFibonacci);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fibonacci\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"number\",\n        value: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Generar secuencia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), secuencia && secuencia]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Fibonacci, \"c0RBVRgsdXwnVLhDJaWT2azudvw=\");\n\n_c = Fibonacci;\nexport default Fibonacci;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fibonacci\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Prueba-desarrollo-AKElab/client/src/components/Fibonacci/Fibonacci.js"],"names":["React","useState","Fibonacci","number","setNumber","secuencia","setSecuencia","nFibonacci","n","arr","i","push","document","write","join","handleChange","e","target","value","handleClick","calculoFibonacci"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,WAASM,UAAT,CAAoBC,CAApB,EAAqC;AAAA,QAAdC,GAAc,uEAAR,CAAC,CAAD,EAAI,CAAJ,CAAQ;;AAGjC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQ,SAAIC,CAAC,GAAC,CAAN,EAASA,CAAC,IAAIF,CAAd,EAAiBE,CAAC,EAAlB,EAAqB;AACjBD,MAAAA,GAAG,CAACE,IAAJ,CAASF,GAAG,CAACC,CAAC,GAAC,CAAH,CAAH,GAAWD,GAAG,CAACC,CAAC,GAAC,CAAH,CAAvB;AACAE,MAAAA,QAAQ,CAACC,KAAT,CAAeJ,GAAG,CAACC,CAAD,CAAH,GAAO,OAAtB;AACH;;AAED,WAAOD,GAAG,CAACK,IAAJ,CAAS,IAAT,CAAP;AACH;;AAED,QAAMC,YAAY,GAAIC,CAAD,IAAM;AACvBZ,IAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAK;AACrB,QAAIC,gBAAgB,GAAGb,UAAU,CAACJ,MAAD,CAAjC;AACAG,IAAAA,YAAY,CAACc,gBAAD,CAAZ;AACH,GAHD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEjB;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEgB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKd,SAAS,IAAIA,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5CD;;GAAMH,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst Fibonacci = () =>{\r\n\r\n    const [number, setNumber] = useState(null);\r\n    const [secuencia, setSecuencia] = useState('');\r\n\r\n    function nFibonacci(n, arr = [0, 1]) {\r\n        \r\n\r\n        /* if(n === 0 ){\r\n            arr.push(0);\r\n            return arr.join(', ');\r\n        } else if( n === 1){\r\n            arr.push(1);\r\n            return arr.join(', ');\r\n        } else {\r\n            arr.push(nFibonacci(n-1, arr) + nFibonacci(n-2, arr));\r\n            return arr.join(', ');\r\n        }   */\r\n\r\n        for(i=2; i <= n; i++){\r\n            arr.push(arr[i-1] + arr[i-2]);\r\n            document.write(arr[i]+\"<br/>\");\t\r\n        }\r\n\r\n        return arr.join(', ');\r\n    }\r\n\r\n    const handleChange = (e) =>{\r\n        setNumber(e.target.value);\r\n    }\r\n    const handleClick = () =>{\r\n        let calculoFibonacci = nFibonacci(number);\r\n        setSecuencia(calculoFibonacci);\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Fibonacci</h1>\r\n            <div>\r\n                <input type=\"text\" name=\"number\" value={number}/>\r\n                <button onClick={handleClick}>Generar secuencia</button> \r\n                {secuencia && secuencia}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Fibonacci;"]},"metadata":{},"sourceType":"module"}