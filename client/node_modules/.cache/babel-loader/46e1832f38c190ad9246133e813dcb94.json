{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Prueba-desarrollo-AKElab\\\\client\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMovies, filterMovie, searchMovie } from \"../../redux/actions\";\nimport Filtros from \"./Filtros\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    movies,\n    genres\n  } = useSelector(state => state);\n  const [filterGenres, setFilterGenres] = useState([]);\n  const [search, setSearch] = useState('');\n  const [order, setOrder] = useState('');\n  useEffect(() => {\n    dispatch(getMovies());\n  }, [dispatch]);\n\n  const handleCheckbox = e => {\n    if (!e.target.checked) {\n      let genresNewFiltrado = filterGenres.filter(g => g !== e.target.value);\n      setFilterGenres(genresNewFiltrado);\n      dispatch(filterMovie(genresNewFiltrado));\n    } else {\n      if (e.target.checked) {\n        setFilterGenres([...filterGenres, e.target.value]);\n        dispatch(filterMovie([...filterGenres, e.target.value]));\n      }\n    }\n  };\n\n  const handlerSearch = e => {\n    setSearch(e.target.value);\n    dispatch(searchMovie(e.target.value));\n  };\n\n  const handleOrder = e => {\n    setOrder(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filtros, {\n      genres: genres,\n      handleCheckbox: handleCheckbox,\n      handlerSearch: handlerSearch,\n      search: search,\n      order: order,\n      handleOrder: handleOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), movies && movies.length !== 0 ? movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"T\\xEDtulo: \", movie.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movies, \"DpUt3gKBwtQY3GsHSFW50dthGZY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Prueba-desarrollo-AKElab/client/src/components/Movies/Movies.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getMovies","filterMovie","searchMovie","Filtros","Movies","dispatch","movies","genres","state","filterGenres","setFilterGenres","search","setSearch","order","setOrder","handleCheckbox","e","target","checked","genresNewFiltrado","filter","g","value","handlerSearch","handleOrder","length","map","movie","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,qBAApD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAACQ,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBR,WAAW,CAACS,KAAK,IAAIA,KAAV,CAApC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEVQ,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AAEH,GAJQ,EAIP,CAACK,QAAD,CAJO,CAAT;;AAMA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAE1B,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,OAAd,EAAuB;AAEnB,UAAIC,iBAAiB,GAAGV,YAAY,CAACW,MAAb,CAAqBC,CAAC,IAAIA,CAAC,KAAKL,CAAC,CAACC,MAAF,CAASK,KAAzC,CAAxB;AACAZ,MAAAA,eAAe,CAACS,iBAAD,CAAf;AACAd,MAAAA,QAAQ,CAACJ,WAAW,CAACkB,iBAAD,CAAZ,CAAR;AAEH,KAND,MAMO;AAEH,UAAGH,CAAC,CAACC,MAAF,CAASC,OAAZ,EAAoB;AAEhBR,QAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,CAAC,CAACC,MAAF,CAASK,KAA3B,CAAD,CAAf;AACAjB,QAAAA,QAAQ,CAACJ,WAAW,CAAC,CAAC,GAAGQ,YAAJ,EAAkBO,CAAC,CAACC,MAAF,CAASK,KAA3B,CAAD,CAAZ,CAAR;AAEH;AAEJ;AAEJ,GAnBD;;AAqBA,QAAMC,aAAa,GAAIP,CAAD,IAAO;AACzBJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASK,KAAV,CAAT;AACAjB,IAAAA,QAAQ,CAACH,WAAW,CAACc,CAAC,CAACC,MAAF,CAASK,KAAV,CAAZ,CAAR;AACH,GAHD;;AAKA,QAAME,WAAW,GAAIR,CAAD,IAAO;AACvBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASK,KAAV,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,MAAM,EAAIf,MADd;AAEI,MAAA,cAAc,EAAIQ,cAFtB;AAGI,MAAA,aAAa,EAAEQ,aAHnB;AAII,MAAA,MAAM,EAAEZ,MAJZ;AAKI,MAAA,KAAK,EAAEE,KALX;AAMI,MAAA,WAAW,EAAEW;AANjB;AAAA;AAAA;AAAA;AAAA,YADJ,EAUQlB,MAAM,IAAIA,MAAM,CAACmB,MAAP,KAAkB,CAA5B,GAAgCnB,MAAM,CAACoB,GAAP,CAAYC,KAAK,IAAI;AACjD,0BACI;AAAA,+BACI;AAAA,oCAAeA,KAAK,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAN+B,CAAhC,GAOE,IAjBV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAjED;;GAAMxB,M;UACeN,W,EACQC,W;;;KAFvBK,M;AAmEN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMovies, filterMovie, searchMovie } from \"../../redux/actions\";\r\nimport Filtros from \"./Filtros\";\r\n\r\nconst Movies = () => {\r\n    const dispatch = useDispatch();\r\n    const {movies, genres} = useSelector(state => state);\r\n    const [filterGenres, setFilterGenres] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [order, setOrder] = useState('');\r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch(getMovies())\r\n\r\n    },[dispatch])\r\n\r\n    const handleCheckbox = (e) => {\r\n\r\n        if( !e.target.checked ){\r\n\r\n            let genresNewFiltrado = filterGenres.filter( g => g !== e.target.value );\r\n            setFilterGenres(genresNewFiltrado);\r\n            dispatch(filterMovie(genresNewFiltrado))\r\n\r\n        } else {\r\n\r\n            if(e.target.checked){\r\n                \r\n                setFilterGenres([...filterGenres, e.target.value]);\r\n                dispatch(filterMovie([...filterGenres, e.target.value]))\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handlerSearch = (e) => {\r\n        setSearch(e.target.value);\r\n        dispatch(searchMovie(e.target.value))\r\n    }\r\n\r\n    const handleOrder = (e) => {\r\n        setOrder(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Filtros\r\n                genres = {genres}\r\n                handleCheckbox = {handleCheckbox}\r\n                handlerSearch={handlerSearch}\r\n                search={search}\r\n                order={order}\r\n                handleOrder={handleOrder}\r\n            />\r\n            {\r\n                movies && movies.length !== 0 ? movies.map( movie => {\r\n                    return (\r\n                        <div>\r\n                            <span>TÃ­tulo: {movie.title}</span>\r\n                        </div>\r\n                    )\r\n                })\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}