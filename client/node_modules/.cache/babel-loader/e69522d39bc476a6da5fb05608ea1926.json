{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Prueba-desarrollo-AKElab\\\\client\\\\src\\\\components\\\\Movies\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMovies, filterMovie } from \"../../redux/actions\";\nimport Filtros from \"./Filtros\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    movies,\n    genres\n  } = useSelector(state => state);\n  const [filterGenres, setFilterGenres] = useState([]);\n  useEffect(() => {\n    dispatch(getMovies());\n  }, [dispatch]);\n\n  const handleCheckbox = e => {\n    if (!e.target.checked) {\n      let genresNewFiltrado = filterGenres.filter(g => g !== e.target.value);\n      setFilterGenres(genresNewFiltrado);\n      dispatch(filterMovie(genresNewFiltrado));\n    } else {\n      if (e.target.checked) {\n        setFilterGenres([...filterGenres, e.target.value]);\n        dispatch(filterMovie([...filterGenres, e.target.value]));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filtros, {\n      genres: genres,\n      handleCheckbox: handleCheckbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), movies && (movies === null || movies === void 0 ? void 0 : movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"T\\xEDtulo: \", movie.original_title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this);\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movies, \"T9N0e4oYDdLpuInSE2fPKhguh8I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/Prueba-desarrollo-AKElab/client/src/components/Movies/Movies.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getMovies","filterMovie","Filtros","Movies","dispatch","movies","genres","state","filterGenres","setFilterGenres","handleCheckbox","e","target","checked","genresNewFiltrado","filter","g","value","map","movie","original_title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,qBAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAACO,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBP,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAApC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEVO,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AAEH,GAJQ,EAIP,CAACI,QAAD,CAJO,CAAT;;AAMA,QAAMM,cAAc,GAAIC,CAAD,IAAO;AAE1B,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,OAAd,EAAuB;AAEnB,UAAIC,iBAAiB,GAAGN,YAAY,CAACO,MAAb,CAAqBC,CAAC,IAAIA,CAAC,KAAKL,CAAC,CAACC,MAAF,CAASK,KAAzC,CAAxB;AACAR,MAAAA,eAAe,CAACK,iBAAD,CAAf;AACAV,MAAAA,QAAQ,CAACH,WAAW,CAACa,iBAAD,CAAZ,CAAR;AAEH,KAND,MAMO;AAEH,UAAGH,CAAC,CAACC,MAAF,CAASC,OAAZ,EAAoB;AAEhBJ,QAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBG,CAAC,CAACC,MAAF,CAASK,KAA3B,CAAD,CAAf;AACAb,QAAAA,QAAQ,CAACH,WAAW,CAAC,CAAC,GAAGO,YAAJ,EAAkBG,CAAC,CAACC,MAAF,CAASK,KAA3B,CAAD,CAAZ,CAAR;AAEH;AAEJ;AAGJ,GApBD;;AAsBA,sBACI;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,MAAM,EAAIX,MADd;AAEI,MAAA,cAAc,EAAII;AAFtB;AAAA;AAAA;AAAA;AAAA,YADJ,EAMQL,MAAM,KAAIA,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEa,GAAR,CAAaC,KAAK,IAAI;AAC5B,0BACI;AAAA,+BACI;AAAA,oCAAeA,KAAK,CAACC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANS,CAAJ,CANd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlDD;;GAAMjB,M;UACeL,W,EACQC,W;;;KAFvBI,M;AAoDN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMovies, filterMovie } from \"../../redux/actions\";\r\nimport Filtros from \"./Filtros\";\r\n\r\nconst Movies = () => {\r\n    const dispatch = useDispatch();\r\n    const {movies, genres} = useSelector(state => state);\r\n    const [filterGenres, setFilterGenres] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch(getMovies())\r\n\r\n    },[dispatch])\r\n\r\n    const handleCheckbox = (e) => {\r\n\r\n        if( !e.target.checked ){\r\n\r\n            let genresNewFiltrado = filterGenres.filter( g => g !== e.target.value );\r\n            setFilterGenres(genresNewFiltrado);\r\n            dispatch(filterMovie(genresNewFiltrado))\r\n\r\n        } else {\r\n\r\n            if(e.target.checked){\r\n                \r\n                setFilterGenres([...filterGenres, e.target.value]);\r\n                dispatch(filterMovie([...filterGenres, e.target.value]))\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Filtros\r\n                genres = {genres}\r\n                handleCheckbox = {handleCheckbox}\r\n            />\r\n            {\r\n                movies && movies?.map( movie => {\r\n                    return (\r\n                        <div>\r\n                            <span>TÃ­tulo: {movie.original_title}</span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}